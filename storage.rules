rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Buyer display structure: buyer_display/{sellerName}/{productName}/images/
    match /buyer_display/{sellerName}/{productName}/images/{imageId} {
      allow read: if true; // Anyone can read product images
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Buyer display structure: buyer_display/{sellerName}/{productName}/audios/
    match /buyer_display/{sellerName}/{productName}/audios/{audioId} {
      allow read: if true; // Anyone can read product audios
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Simplified organized structure: buyer_display/products/{productName}/images/
    match /buyer_display/products/{productName}/images/{imageId} {
      allow read: if true; // Anyone can read product images
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Simplified organized structure: buyer_display/products/{productName}/audios/
    match /buyer_display/products/{productName}/audios/{audioId} {
      allow read: if true; // Anyone can read product audios
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Buyer display audio stories: buyer_display/{sellerName}/audio/
    match /buyer_display/{sellerName}/audio/{audioId} {
      allow read: if true; // Anyone can read audio stories
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Legacy products folder for backward compatibility
    match /products/{allPaths=**} {
      allow read: if true; // Anyone can read product images
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Legacy audio stories path for backward compatibility
    match /products/audio_stories/{fileName} {
      allow read: if true; // Anyone can read audio stories
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // User profile images
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Craft request images - allow authenticated users to upload reference images
    match /craft_requests/{allPaths=**} {
      allow read: if true; // Anyone can read craft request images
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // Direct craft_requests root path
    match /craft_requests/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Specific craft request image upload path
    match /craft_requests/{userId}/{requestId}/{imageId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Alternative craft request paths
    match /craft_requests/images/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Seller profile and banner images
    match /sellers/{sellerId}/profile/{imageId} {
      allow read: if true; // Anyone can read seller profile images
      allow write: if request.auth != null && request.auth.uid == sellerId;
    }
    
    // Product videos
    match /videos/{sellerId}/{productName}/{videoId} {
      allow read: if true; // Anyone can read product videos
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // General uploads folder for temporary files
    match /uploads/{allPaths=**} {
      allow read: if true; // Anyone can read uploaded images
      allow write: if request.auth != null; // Only authenticated users can upload
    }
    
    // User uploads with organized structure - fallback with userID prefix
    match /buyer_display/{sellerName}/{userProductName}/images/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && 
                   userProductName.matches('^' + request.auth.uid + '_.*');
    }
    
    // User uploads with organized structure - audios with userID prefix
    match /buyer_display/{sellerName}/{userProductName}/audios/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && 
                   userProductName.matches('^' + request.auth.uid + '_.*');
    }
    
    // Living Workshop media uploads - allow authenticated users to upload workshop content
    match /living_workshops/{userId}/{workshopId}/{fileName} {
      allow read: if true; // Anyone can read workshop media for viewing experiences
      allow write: if request.auth != null && request.auth.uid == userId; // Only the creator can upload
    }
    
    // Living Workshop root access for general workshop media
    match /living_workshops/{allPaths=**} {
      allow read: if true; // Public read access for workshop viewing
      allow write: if request.auth != null; // Authenticated users can create workshops
    }
    
    // Allow authenticated users to upload and read chat images
    match /chat_images/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && (request.resource == null || request.resource.size < 5 * 1024 * 1024); // 5MB limit
    }
    
    // Allow authenticated users to upload and read voice messages
    match /voice_messages/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && (request.resource == null || request.resource.size < 10 * 1024 * 1024); // 10MB limit for voice messages
    }
    
    // Allow artisans to upload voice responses to reviews and buyers to read them
    match /review_voice_responses/{fileName} {
      allow read: if request.auth != null; // Authenticated users can read voice responses
      allow write: if request.auth != null 
        && (request.resource == null || request.resource.size < 10 * 1024 * 1024); // 10MB limit for voice responses
    }
  }
}