rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Products - readable by all, writable by authenticated users
    match /products/{productId} {
      allow read: if true; // Anyone can read products
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.artisanId;
      allow update: if request.auth != null && 
                   request.auth.uid == resource.data.artisanId;
      allow delete: if request.auth != null && 
                   request.auth.uid == resource.data.artisanId;
    }
    
    // Sellers - readable by all, writable by owner
    match /sellers/{sellerId} {
      allow read: if true; // Anyone can read seller profiles
      allow write: if request.auth != null && 
                  request.auth.uid == sellerId;
    }
    
    // Orders - readable/writable by buyer and seller
    match /orders/{orderId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.buyerId || 
         request.auth.uid == resource.data.sellerId);
    }
    
    // Users - readable/writable by owner only
    match /users/{userId} {
      allow read, write: if request.auth != null && 
                        request.auth.uid == userId;
    }
    
    // Customer profiles - allow authenticated users to read and write their own data
    match /customers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow access to subcollections
      match /{subcollection=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Retailer profiles - allow authenticated users to read and write their own data
    match /retailers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow access to subcollections
      match /{subcollection=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Reviews - readable by all, writable by order participants
    match /reviews/{reviewId} {
      allow read: if true; // Anyone can read reviews
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.buyerId;
      allow update: if request.auth != null && 
                   (request.auth.uid == resource.data.buyerId ||
                    request.auth.uid == resource.data.sellerId);
    }
    
    // Categories - readable by all, writable by admins
    match /categories/{categoryId} {
      allow read: if true; // Anyone can read categories
      allow write: if false; // Admin only via server
    }
    
    // Analytics - readable by authenticated users, writable by system
    match /analytics/{analyticsId} {
      allow read: if request.auth != null;
      allow write: if false; // System only
    }
    
    // Notifications - readable/writable by recipient
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
                        request.auth.uid == resource.data.userId;
    }
    
    // Conversations - readable/writable by participants
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
                        request.auth.uid in resource.data.participants;
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
                          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    
    // Promotions - readable by all, writable by admins
    match /promotions/{promotionId} {
      allow read: if true; // Anyone can read promotions
      allow write: if false; // Admin only
    }
    
    // General fallback for other collections - require authentication
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    match /databases/{database}/documents {
    // Chat rooms and messages rules
    match /chat_rooms/{chatRoomId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.artisanId);
      
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }
    }
  }
}
